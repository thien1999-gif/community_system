<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<security:http auto-config="false" use-expressions="true" disable-url-rewriting="true">

		<security:intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/trainer/**" access="hasAnyRole('ROLE_TRAINER')" />
		<security:intercept-url pattern="/trainee/**" access="hasAnyRole('ROLE_TRAINEE')" />
		<security:intercept-url pattern="/guest/**" access="permitAll" />
		<security:intercept-url pattern="/**" access="permitAll" />
		
	<!-- 	access denied page -->
		<security:access-denied-handler 
			error-page="/guest/formLogin?AccessDenied" 
		/>
		<security:form-login
		    login-page="/guest/formLogin"
		    login-processing-url="/guest/loginProcess"
			authentication-failure-url="/guest/formLogin?error"
			authentication-success-handler-ref="userSecuritySuccessHandler"
			username-parameter="userEmail"
			password-parameter="password"
		/>
		<security:logout 
			logout-url="/guest/logout" 
			invalidate-session="true" 
			delete-cookies="JSESSIONID" 
		/>
		<security:remember-me 
			key="uniqueAndSecrets" 
			token-validity-seconds="86400"
			remember-me-parameter="remember-me"
			user-service-ref="UserAuthenticateService"
		/>
		<security:session-management 
			invalid-session-url="/guest/home?sessionTimeout"
		/>
		
</security:http>
	
 	<security:authentication-manager>
        <security:authentication-provider user-service-ref="UserAuthenticateService">
			<security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/> 

    <bean id="UserAuthenticateService" class="edu.fa.service.UserAuthenticateService"/>
    
    <bean id="userSecuritySuccessHandler" class="edu.fa.security.UserSecuritySuccessHandler"/>
</beans>
